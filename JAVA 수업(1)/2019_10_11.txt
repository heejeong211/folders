1. 재귀 호출이란?
어떤 함수가 자기 자신을 호출하는 것이다.

2. 재귀 호출 함수 작성시 유의할 점?
무조건 종료 조건이 있어야 한다.

3. 피보나치 함수를 설명(작성)할 수 있는가?
지수 승 만큼 늘어난다. 스택이라는 메모리를 사용한다. 
뎁스가 많으면 많은 수록  tree처럼 옆으로 늘어난다.

4. 피보나치 함수를 재귀 호출로 작성시 문제점에 대해 논하라.
피보나치 함수는 지수 승 만큼 증가 하기 때문에 처리 시간이 오래 걸리고,
또한 피보나치 함수는 스택이라는 메모리를 사용하는데, 스택은 힙보다 저장용량이
적기도 적고 한정되어있어서 자칫하다가 터질수도있다....?
 
5. Memoization(다이나믹 프로그램 기법 중 하나) 이란 무엇인가?
메모이제이션 기법이란 개수가 n개라면 n개 만큼 늘어난다.
힙 메모리를 사용한다. (저기에서는 선형 기법으로 사용) 

6. 함수에서 반환 타입(리턴 타입)의 의미?
함수에서 반환 타입의 의미는 output과 다르다.
어떤 함수는 반환값이 도출되지 않는 함수가 있다. 
그러므로 반환 타입이 꼭 output 인 것만은 아니다.

7. 함수가 어떤 값도 반환하지 않는다면, 함수의 반환 타입은?
void 타입이다. void 타입에서는 return 하고 바로 세미콜론(;)이 붙는다.
 
8. 함수로 작성하는 이유는?
반복적으로 사용하는 코드 때문 - 재사용성 증가
코드관리 용이 (그 코드 자체가 반복적일 수록 )

*코드를 개선하는 것 (리팩토링)
코드를 효율적으로 바꾸는 것. 성능을 개선하는 것.

(리엔지니어닝)
더이상 라이브러리나 이런 것이 안나올 때
새롭게 만들어서 사용하는 것. 
-------------------------------------------------------
언젠가 시험에 나옴.........ㅎ (Find369.java)

****3-6-9 게임 짜기(자릿수를 알 수 없는 큰 숫자에서 숫자 
하나 하나를 다룰 때 알아야 하는 코드-그래서 제일 작은
수부터 처리!!(자연수))
(While이라는 함수는 넘버라는 숫자가 0로 수렴할 때 까지 1의 자리의 숫자를 추출한다.)
   - 어떤수가 3, 6 또는 9라는 숫자를 포함한 개수를 센다.
   - int find369(int number); 로 작성
   - int find369(String s); 로 작성

****숫자 180도로 뒤집기(RotateNumber 180)

****LeetCord에서 ReversInt로 풀어보기
------------------------------------------------------

char ch; //'0' <= ch '9'
int disit = ch - '0'

int num; //0 <= num <= 9
char c = '0' + num;

이때 캐스팅 주의 char 연산은 int로 바뀔 수 있음
하지만 int를 char로 하면 절삭이 될 수 있음. 그래서 캐스팅 해야함!

------------------------------------------

1. 추상화 클래스, 인터페이스, 제너릭 클래스를 각각 사용하여, 스택을 구현하시오.
추상화 클래스: 추상화 함수를 하나라도 같고 있다면 추상화 클래스라고 정의한다.
인터페이스: 추상화 클래스의 추상화 함수와 같이 함수의 선언만 포함되고 있는 것을 인터페이스라고 한다.
제너릭 클래스: 제너릭 클래스는 오브젝트를 만들기 전까지는 형을 추상적으로 표현하고,
오브젝트 생성 시에 구체적인 형을 지정함.
제너릭 클래스 알고리즘은 같은데, 타입이 다를 때

-배열을 사용하여 구현한다.
-자바 콜렉션 타입(객체)을 사용하여 구현한다.

2. 자바 콜렉션 타입(객체) {오라클에 자바 도큐먼트에 찾아보기}
   - Collection -> 기본 인터페이스
   - Iterable
   - Iterator
   - List
   - Map
   - Queue
   - Set
   => 다 인터페이스

3.  Race Condition은 무엇이고, 다중 스레드 환경에서 안전한 코드란 무엇인가?
두개 이상의 멀티 스레드들이 리소스를 소유권을 획득하기 위해서 경쟁하는 것.
어떤 자원이 있는데 그 자원을 차지하기 위한 경쟁을 레이스 컨디션이라고 한다.
보통은 시분활로 한다. 

*교착상태(데드락) : 둘 이상의 프로세스가 서로가 가진 한정된 자원을 요청하는 경우 발생하는 것으로, 
프로세스가 진전되지 못하고 모든 프로세스가 대기 상태가 된다.
이를 해결하기 위해서는 한쪽을 죽이거나 둘 다 죽여야 한다. (한쪽을 죽이는 것이 낫다.)

4. 동기화 객체란 무엇인가?(Mutex, Semaphore 등)
레이스 컨디션을 해결하기 위한 객체이다.
자원의 공유문제를 해결하기 위한 객체.

*Mutex 와 Semaphore의 차이점
리소스가 1개 일때는 둘다 사용 가능
그러나 리소스가 여러개 일때는 Semaphore를 사용.

뮤텍스(mutex)는 여러 스레드를 실행하는 환경에서 자원에 대한 접근에
제한을 강제하기 위한 동기화 매커니즘이다.
세마포어(Semaphore)는 프로그래밍, 특히 유닉스시스템의 프로그래밍에서 세마포어는 운영체계의
자원을 경쟁적으로 사용하는 다중 프로세스에서, 행동을 조정하거나 또는 동기화 시키는 기술이다. 

5. 생성자(Constructor)란 무엇인가?
클래스 이름과 같은 함수로 반환값은 없고 인스턴스 멤버를 초기화 하기 위해 사용함.
생성자에서 멤버를 초기화, 데이터베이스 만들고, 네트워크 초기화 등등을 할 수 있는데 
꼭 생성자에서 꼭 안해도 됨.
 
단, 생성자에서 꼭 해야하는 경우 : 만약에 final이 붙으면
생성자에서 상수형 인자를 초기화 시켜줘야 한다.

6. 기본생성자(Default constructor)란 무엇인가?
이름은 클래스 이름과 같고 반환값을 갖고 있지 않으며 인자를 갖고 있는 않는 것

* 생성자와 기본생성자와의 차이점
둘 다 클래스 이름과 같고 반환값을 갖고 있지 않음
그러나 기본생성자는 인자를 갖고 있지 않다.

* 추상화 클래스와 인터페이스 차이점
둘 다 함수의 선언만 있지 정의나 구현이 되어있지 않다
그러나 인터페이스에서는 구현상속을 사용할 수 없으므로 구현상속을
사용할 때에는 추상화 클래스를 이용해야 한다.

*스택이란?
처음에 들어간 데이터가 가장 마지막에 나온다. 선입후출,후출선입을 지원하는 구조체이다.
동작으로는 push와 pop이 있고 가장 위에 있는 데이터를  top이라고 부른다.

