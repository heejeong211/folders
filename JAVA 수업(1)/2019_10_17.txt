1. 런타임 오류
런타임=실행 할때 
논리적 오류로 인해서 발생

*문법적 오류는 컴파일타임에...

2. 컴퓨터기억장치안에 저장공간에 이름을 붙임
변수에다가 저장함

3. 상수의 정의
리터럴상수- 이름이 없음
일반상수- 이름이 있음 파이널. final double PO = 3.141592
변하지 않는 수

4. 추상화 함수 예
abstarct void print();
선언만있고 구현은 가지고 있지 않음

5. 추상화 클래스
추상화 클래스는 추상화 함수는 하나 이상 가지고 있는 클래스

6. 싱글턴 패턴
언제나 항상 하나의 인스턴스만 가지고 있는 클래스 디자인 패턴 이다.

7.클래스 함수 
정적 메소드로, 클래스의 인스턴스가 없어도 클래스만 통해서 호출할 수 있는 함수를 말함.
this사용 안됨(인스턴스멤버 사용안됨)

8. 상속성 부모로 부터 구현 또는 선언을 물려받는 것
다형성 부모로 부터 물려받은 정의를 새로 정의하는 것
은닉성 외부에서 객체의 내부를 변경하거나 바꿀 수 없는 것을 말한다.

9. 생성자
클래스의 이름과 같은 함수로 반환자를 갖고 있지 않고 보통 멤버를 초기화 할 때 쓰인다
기본 생성자 인자 안가지고 있으면

10. 전위 연산자, 후위 연산자

-------------------------------------------------------

Leet Code가서 문제 좀 풀어야....

Input: 123
Output: 321

Input: 120
Output: 21

*문자열로 다루는 법
"123""120""-123" ->한자씩 가져오는 법 charAt
                         문자로 가져오면 120, -123 처리가 쉽지 않음
*수학적인 방법으로 다루는 법
"123""120""-123" ->한자리씩 가져오는 법 %10
                         그리고 /10
                         또 왼쪽 시프트 연산자 써야함 *10
========================================
Input: 1221
Output: 1221
=>ture

Input: -1221			
Output: 1212
=>false

*문자열로 다루는 법
1221이 대칭이여야 함
하나씩 비교해서 중앙에 다다를때 까지

-1221

-------------------------------------------------------------

*어떤 정수의 비트의 순서를 뒤집어라.

   int a  = 0xf4f7; //1111 0100 1111 0111 => 1110 1111 0100 1111 (EF2F) 32비트
   short a = 0xf4f7; //1111 0100 1111 0111 => 1110 1111 0100 1111 (EF2F)
   short b = 0x01; // 0000 0000 0000 0001 => 1000 0000 0000 0000 (8000)
   int x = 0x12345678: // 0001 0010 0011 0100 0101 0110 0111 1000
                            =>0001 1110 0110 1010 0010 1100 0100 1000

  long reverse = 0;
  for (int i = 0; i < 32; i++) {
       int bit = x & 1(0x00000001); //제일 작은 비트부터 extract a least singificant bit.
       reverse = reverse << 1 | bit; //비트 or 연산자를 통해서 
       x >>= 1; //하나씩 줄여야 함.
   }

-----------------------------------------------------------

[1, 3, 5, 7, 9, 11]
[1, 3, 5, 7, 9, 11]

8이라는 수가 있다고 치면
8보다 같거나 큰 애들 9 ,11 은 없다고 치고
고려해야할 애들이 1, 3, 5, 7임.
순서쌍을 만듦.
[1, 3] [1, 5] [1, 7] 4 6 8
[3, 5] [3, 7] 8 10
[5, 7] 12

=> 8에 해당하는 건 두 개

--------------------------------------------------------
0.File의 경로(pathname)와 파일 이름(filename)
- pathname은 절대 경로와 상대 경로가 존재
- filename은 보통 파일 자체의 이름을 말함.
1. File 사용하기(  *자바 버퍼)
  -PrintWriter 실습
   import java.io.*

try {
     PrintWriter printer = new PrintWriter("Hello.txt");
     printer.println("Hello World");
  
     printer.flush();
     printer.close();
  }catch (Exception ex) {
}

2. File 실습하기 #2

-친구가 몇명인지 물어본다.
-입력된 수 만큼 이름을 입력받아, 파일에 저장한다.

3.  입력된 문자열에서 토큰화 하는 방법
String line = "localhost\t1237.0.0.1"; ->호스트 파일
String[] tokens = line.split("\t");

String password = root:():/root:/bin/bash ->우분투의 패스워드 파일
String[] items = password.split(":");

4. java.io.Serializable 인터페이스를 상속받은 클래스의 객체가 직렬화를 가능하게 해준다.
->바이트 스트림으로 저장하기 때문에 사람의 눈으로 볼 수 없음.

  FilOutputStream outputSream = new FilOutputStream("");
  ObjectOutputStream objOutput = new ObjectOutputStream(objOutput);
  
  obOutput.writeObject(시리얼라이즈 가능한 오브젝트 전달);

-직렬화 가능한 클래스 정의
-모든 멤버는 직렬화가 가능해야 한다.
기본타입은 다 직렬화 됨(프리미티브타입)+String
자바의 모든 객체는 다 직렬화 할 수 있다? 그건 아님.. 
멤버가 다 시리얼라이즈러블 하다면 부모도 다 시리얼라이즈러블하다?? 그것은 아니다.
직렬화는 객체를 바이트 스트림으로 바꿔준다.
자바는 통신을 할 때 바이트 스트림을 사용한다.

------------------------------------------------------

*file class 찾아보기.

------------------------------------------------------
공부 로드맵

자바 > SQL(DB) > Web
      ↑
JavaScript = ECMAScript 6
Html
CSS


