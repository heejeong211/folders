-금요일날 객체 생성에 대해 배움

-객체=인스턴스

-형 (데이터 타입)
1. 프리미티브형(기본형) 
2. 참조형(기본형 외의 모든 형, 레퍼런스 타입, 무조건 4바이트, 얘 자체도 변수선언임.)

-new(동적할당, 다이나믹) (vs 정적할당, 스테틱)
초기화를 위해서 사용함.

-생성자
클래스 이름과 같은 이름의 함수.

-참조형 접근할 때
안에 있는 멤버변수가 해당 함수를 사용한다는 의미.
객체명.함수명 or 변수명

----------------------------------------------------------
-클래스 패스
자바컴파일하고 난 다음에 .class파일 생성.
컴파일된 해당 .class파일을 어떻게 실행시키는 가에 대한 내용.
파일 단위로 .class파일을 만드는게 아니라 클래스 단위로 .class파일을 만듦.
같은 파일 안에 클래스가 3개 있으면 소스 코드는 한개인데,
.class가 3개 생김. 1개 생기는 것이 아니라.

set classpath =.;C:\PackageStudy\MyClass
java -classpath ".;lib(폴더명)" Hello(클래스명) ->클래스패스

JVM이 프로그램을 실행할 때, 클래스파일을 찾는데 기준이 되는 파일 경로

. -> 현재 디렉토리에서 한 번 찾아봐라 여기서 못찾으면
; -> lib 폴더에서 찾아봐라

-절대 경로 vs 상대 경로
절대 경로란?
제일 위에 있는 경로(C:, D:, E: 윈도우즈에서는)(이것을 루트라고 표현함.)부터 한방에 풀어낸는 것.
상대 경로란?
현재 디렌토리를 기준으로 경로를 표현하게 될 때를 상대 경로라고 한다.

-cd 는 체인지 디렉토리
cd . -> 현재 경로로 가라
cd .. -> 상위 경로(폴더)로 가라

-클래스패스 고정시키는 방법
왜 고정시킬까?
패스를 고정시키지 않았으면 javac를 실행하지 못함.
어쩌구 저쩌구 bin 에서 javac.exe 파일이 있는데 path해주면 어느 폴더에서든 
javac를 사용할 수 있다.

-패키지
소스코드로 오게 되면 패키지라는 것이 있다.
다른 사람이 만든 Circle 클래스와 내가 만든 Circle 클래스를 보면 구분이 가질 않는다.
그럴 때 패키지를 이용한다.
패키지 이름은 역순으로 만든다. 만약 내가 회사에 다닌다고 하면
www.wxfx.com -> www는 공통된 것이니까 빼고 com.wxfx 라고 만든다.
패키지명을 주니까 실제 폴더도 생김.

-다른 쪽에 있는 패키지 안에 클래스를 가져오고 싶을 때
가져오고 싶은 클래스이름 앞에 그 클래스가 있는 패키지명을 써준다. ->여러 패키지를 사용할 때(구분이 쉬움, 하지만 지저분해 보임.)
혹은 맨 위에 import를 사용하여 패키지 선언을 해버리는 것이다. -> 한 패키지만 이용할 때
import 패키지명.클래스명(*);

----------------------------------------------------
-객체지향 언어는 무엇인가?

-객체언어의 특징

-OOP
클래스와 객체
클래스에는 변수 + 함수 이 자체를 OOP라고 해도 됨.
클래스를 컴파일하면 .class파일이 생김.

-OOP의 특징
1.상속
2.정보 은닉
3.다형성
4.캡슐화

-정보은닉
해당 가지고 있는 멤버변수 안에 다이렉트로 접근하지 못하게
만들고 함수로서만 접근한게 만드는것이 정보은닉이다.
함수로 접근하게 만드니까 예외처리를 할 수 있다.
방법 : 변수 자체를 private로 만들고 함수를 통해서 사용할 수 있게끔 해야 한다.

-접근제한자
public
proteced
default
private

-클래스에 붙을 수 있는 접근제한자
public, default
default는 아무것도 붙이지 않는 것을 의미함.

-변수와 함수에 붙을 수 있는 접근제한자
4가지 다 붙을 수 있음.

-캡슐화
정보은닉 = 캡슐화? =>비슷한데 따로 생각해야 함. 캡슐화가 더 큰 범위
OOP의 프로그래밍의 목적
프로그램 잘 짰다고 하면 캡슐화가 잘 되어있다고 표현함.

--------------------------------------------------------
-컴파일의 이해
소스: 프로그래밍 언어로 작성된 텍스트 파일 -> 인간이 알아보는 언어
컴파일: 소스 파일을 컴퓨터가 이해할 수 있는 기계어로 만드는 과정 -> 컴퓨터가 알아보는 언어

레지스터: CPU안에 있는 메모리(레지스터 말고도 캐쉬도 있음)

3+4를 하기 위해 명령어를 3개나 씀. 그리고 3+4를 하기 위해 입력한 것은 CPU만든 사람이
그렇게 입력하라고 시킨것임.

---------------------------------------------
-왜 한개의 파일에 public class가 한개 이여만 하는가?
클래스 한개에 파일 한개
(관습) 옛날부터 한 파일안에 대표적인 애 한테만 public를 붙여줌. 그게 관습이었음.
public이라는 것은 다른 패키지에서 해당 패키지를 부를 때 진입점같은 용도로 사용함.
=>.java 파일에서의 진입포인트라고 할 수 있다.
그걸 고슬링 아저씨가 그대로 가져와서 java에 활용함.
main을 가지고 있는 클래스만 public을 붙이도록 하는 것으로.

---------------------------------------------
-static 
static은 변수에도 붙을 수 있고 메소드에도 붙을 수 있다.
-> 클래스 변수, 클래스 메소드

-클래스 변수(정적 변수, static 변수, 공유변수)
변수 앞에 static이 붙게 되었을 때.
변수 앞에 static이 붙게 되면 이 변수 이름으로 메모리에 한번만 올라가게 된다.
static은 객체로 접근하는 것도 되지만 클래스로 접근해야해서 클래스 변수라고 부르는 것임.

-자바에서는 메모리 영역을 7개로 나눈다. (그래도 3가지가 중요함.)
JVM이 메모리를 효율적으로 관리하기 위해 메모리 영역을 나눔.
Heap, Call Stack, Method Area

-Method Area
클래스안에는 객체와 메소드가 있다.
그 메소드를 먼저 올리는 것이다.
javac하고 나서 CardTest 클래스를 실행하기 위해서 JVM이 일단은 Method Area 메모리에 올림.
앞에 static이 붙는 것은 바로 Method Area에 한번만 올려서 초기화 시켜버림.

-Call Stack (정적할당...?)
일반적으로 함수를 여기에다 넣음.
그래서 main이 들어감.
4바이트 크기로 c1이 main안에 들어감.

-Heap
해당 객체를 여기에다가 저장함. -> 동적할당
여기서 객체를 여기다 만드는데 나머지는 다 가져오는데 static 붙여있는 거는 
Method Area에서 해당 static 주소만 가져옴.

-인스턴스변수(일반변수)
static이 붙지 않는 변수.
객체를 가지고 있는 변수. 
(일반적으로 모든 변수는 객체를 가지고 있으므로 변수선언을 할 수 있다.)

---------------------------------------------
*동적할당
컴파일러가 실행할 때 해당 변수를 메모리에 넣는 것.

*정적할당
컴파일러가 실행되기 전에 미리 메모리에다가 크기를 정해 놓는 것을 말한다. 

---------------------------------------------
*****test*****
1. 다음을 만족하는 클래스 Employee를 작성하시오.

클래스 Employee(직원)의 프로그램을 완성하시오.

필드: 이름, 나이, 주소, 부서, 월급 정보를 필드로 선언
생성자: 이름, 나이, 주소, 부서를 지정하는 생성자 정의
메소드 printInfo(): 인자는 없고 자신의 필드 이름, 나이, 주소, 부서를 출력

--------------------------------------------
-면접
1. 클래스와 객체에 대하여 설명하시오.
클래스는 인스턴스와 메소드는 가지고 있는 것을 말한다.
객체는 데이터와 그 데이터에 관련되는 동작을 모두 포함한 것을 말한다.

2. -classpath와 상대경로 절대경로에 대하여 설명하시오.
클래스패스는 현재 디렉토리안에서 .class파일이 어디 폴더에 있는 지 모를 때 사용하는 것이다.
절대경로는 루트부터 모든 주소를 입력하는 것을 말하고, 
상대경로는 cd 하고 직접 폴더명을 써서 검색하는 것이다.

3. 생성자에 대하여 설명하시오.
생성자란 클래스와 같은 이름의 함수를 생성자라고 한다.
생성자 중에는 기본생성자가 있는데, 기본생성자는 인자(파라미터) 없는 것을 기본생성자라고 한다.

4. 자바에서 패키지(물리적, 공간적인 요소 포함)에 대하여 설명하시오.
패키지같은 경우는 자바에서는 같은 이름의 클래스를 둘 이상 갖고 있지 못하는데,
패키지를 이용하면 같은 이름의 클래스를 둘 이상 갖고 있을 수 있다.

 